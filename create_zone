#!/bin/bash

VHOST_AVAILABLE=/etc/apache2/sites-available
VHOST_ENABLE=/etc/apache2/sites-enabled
ZONE_FILE=/etc/bind/zones/db.domain
DOMAIN_DEFAULT=""
VDNS=`which vdns`

if [ "$DOMAIN_DEFAULT" == ""  ]; then
	echo "SET YOU DOMAIN DEFAULT VARIABLE"
	exit 1
fi

# vdns error code
VHOST_ERROR=3

# color
txtred='\e[0;31m'
txtgrn='\e[0;32m'
txtylw='\e[0;33m'
txtrst='\e[0m'
BRed='\e[1;31m'
BGreen='\e[1;32m'
BWhite='\e[1;37m'

red() {
	echo -e "${txtred}$*${txtrst}"
}

bred() {
	echo -e "${BRed}$*${txtrst}"
}

green() {
	echo -e "${txtgrn}$*${txtrst}"
}

bgreen() {
	echo -e "${BGreen}$*${txtrst}"
}

yellow() {
	echo -e "${txtylw}$*${txtrst}"
}

create_vhost() {

	DOCUMENT_ROOT=""

	if [ $# -gt 1 ]; then
		DOCUMENT_ROOT="--docroot $2"
	fi

	$VDNS --domain $DOMAIN_DEFAULT --add $1 $DOCUMENT_ROOT

	if [ $? -eq $VHOST_ERROR ]; then
		red "VHOST \"$1\" already added"
	else
		green "DNS Zone with vhost \"$1\" created!"
	fi
	
	FILE_VHOST="${VHOST_AVAILABLE}/${1}.conf"
	
	if [ ! -e $FILE_VHOST ]; then
		green "Creating VHOST \"$1\""
		print_vhost $1 > $FILE_VHOST

	fi

	FOLDER_VHOST=`cat $FILE_VHOST | grep DocumentRoot | tr -d ' ' | cut -f2- -d'/'`

	if [ ! -d $FOLDER_VHOST ]; then
		mkdir -p /$FOLDER_VHOST
		chown www-data.www-data /$FOLDER_VHOST
	fi

	check_vhost $1

	if [ $? -eq 0 ]; then
		green "Enabling VHOST \"$1\" in Apache!"
		a2ensite $1
	fi

	#check_cname $1

	#if [ $? -eq 1 ]; then
	#	yellow "CNAME \"$1\" already added in DNS!"
	#	return 1
	#fi

	return 0
}

delete_vhost() {

	echo ""
        bred "############################################"
        bred "# VHOST $1 going to delete, Are you sure?  #"
        bred "############################################"
	read -p "(y/n)" -n 1 -r
	echo 

	if [[ $REPLY =~ ^[Yy]$ ]]
	then
		echo "DELETING VHOST $1"
		$VDNS --domain $DOMAIN_DEFAULT --del $1
		a2dissite $1

		return 0
	fi

	return 1
}

print_vhost() {
	$VDNS --domain $DOMAIN_DEFAULT --vhost $1
}

check_vhost() {
	FILE_VHOST="${VHOST_ENABLE}/${1}.conf"
	
	if [ -L $FILE_VHOST ]; then
		return 1	
	fi

	return 0
}

check_cname() {
	cat $ZONE_FILE 2> /dev/null | grep ^$1 -q

	if [ $? -eq 0 ]; then
		return 1
	fi

	return 0
}

create_dns_file() {
	$VDNS --domain $DOMAIN_DEFAULT --print zone > $ZONE_FILE
}

check_configuration() {
	VHOSTS=`$VDNS --domain $DOMAIN_DEFAULT --vhost all_name`

	for VHOST in $VHOSTS; do
		create_vhost $VHOST
		echo ""
	done
}

reload_service() {
	echo ""
        bred "####################################################"
        bred "# Apache and Bind going to restart, Are you sure?  #"
        bred "####################################################"
	read -p "(y/n)" -n 1 -r
	echo 

	if [[ $REPLY =~ ^[Yy]$ ]]
	then
		service apache2 reload
		service bind9 restart
	fi
}

show_cname() {
        bgreen "####################################################"
        bgreen "# Configuration                                    #"
        bgreen "####################################################"

	VHOSTS=`$VDNS --domain $DOMAIN_DEFAULT --vhost all_name`

	for HOST in $VHOSTS; do

		check_cname $HOST

		if [ $? -eq 1 ]; then
			CNAME="${txtgrn}OK${txtrst}"
		else
			CNAME="${txtred}ERROR${txtrst}"
		fi
	
		check_vhost $HOST

		if [ $? -eq 1 ]; then
			VHOST="${txtgrn}OK${txtrst}"
		else
			VHOST="${txtred}ERROR${txtrst}"
		fi

		echo -e "  > ${BRed}${HOST}${txtrst}: vhost:${VHOST} dns:${CNAME}"
	done

	echo -e "\n"
}

usage() {
	echo "Usage"
	echo "$0 add <vhost>                 Create a new vhost"
	echo "$0 add <vhost> <document root> Create a new vhost"
	echo "$0 del <vhost>                 Delete a vhost"
	echo "$0 force                       Force recreate configuration files"
	echo "$0 show                        Print vhost registered"
}

case $1 in
	add)
		if [ $# -lt 2 ]; then
			usage
			exit 1
		fi

		shift

		create_vhost $*

		if [ $? -eq 0 ]; then
			create_dns_file
			reload_service
		fi
	;;

	del)
		if [ $# -lt 2 ]; then
			usage
			exit 1
		fi

		shift
		delete_vhost $1

		if [ $? -eq 0 ]; then
			create_dns_file
			reload_service
		fi
	;;

	print_vhost)
		if [ $# -lt 2 ]; then
			usage
			exit 1
		fi

		shift
		print_vhost $1	
	;;

	force)
		check_configuration
		create_dns_file
		reload_service
	;;

	show)
		show_cname
	;;

	*)
		usage
	;;
esac
